tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: ContinuumTemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: Continuum template

imports:
  - yorc-types:1.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - ddi-types:0.1.2
  - heappe-types:1.0.2
  - org.ystia.docker.containers.docker.generic:3.0.0-SNAPSHOT
  - org.ystia.docker.ansible:3.0.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT
  - org.lexis.weather.wps:0.1.1-SNAPSHOT
  - org.lexis.weather.continuum:0.1.0
  - org.lexis.weather.webdrops:0.1.0

topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "Access token"
    preprocessing_start_date:
      type: string
      description: Download GFS files from this date, format YYYYMMDDHH
      required: true
    preprocessing_end_date:
      type: string
      description: Download GFS files up to this date, format YYYYMMDDHH
      required: true
    postprocessing_run_date:
      type: string
      description: Continuum run date, format YYYY-MM-DD HH:MM
      required: true
    preprocessing_image:
      type: string
      description: Pre-processing container repository path
      default: "laurentg/wps.gfs:0.4.2"
    preprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the pre-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/gfs:/input", "/wps_data/output:/output", "/wps_data/geog/WPS_GEOG:/geogrid"]
    preprocessing_environment_variables:
      type: map
      entry_schema:
        type: string
      description: |
        Environment variables for the pre-processing container.
      # default: {WPS_START_DATE: "2020030112", WPS_END_DATE: "2020030115"}
      required: false
    preprocessing_output_directory:
      type: string
      description: Directory where preprocessing results are stored
      default: /wps_data/output
    postprocessing_hyde_image:
      type: string
      description: Hyde post-processing container repository path 
      default: "laurentg/fp_framework_hyde:1.0.3"
    postprocessing_hyde_inputs_directory:
      type: string
      description: |
        Directory where hyde postprocessing input data will be stored
      default: /continuum/datasets_hyde
    postprocessing_hyde_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the Hyde post-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/continuum/datasets_hyde/static_data/marche:/home/fp/fp_mount/datasets_hyde/static", "/continuum/datasets_hyde/dynamic_data/:/home/fp/fp_mount/datasets_hyde/dynamic_raw", "/continuum/datasets_hyde/docker_data:/home/fp/fp_mount/datasets_hyde/dynamic_processed"]
    postprocessing_hmc_image:
      type: string
      description: HMC post-processing container repository path
      default: "laurentg/fp_framework_hmc:1.0.3"
    postprocessing_hmc_inputs_directory:
      type: string
      description: |
        Directory where HMC postprocessing input data will be stored
      default: /continuum/datasets_hmc
    postprocessing_hmc_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the HMC post-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/continuum/datasets_hmc/static_data/gridded/marche:/home/fp/fp_mount/datasets_hmc/static/gridded","/continuum/datasets_hmc/static_data/point/marche:/home/fp/fp_mount/datasets_hmc/static/point","/continuum/datasets_hmc/dynamic_data/restart/marche:/home/fp/fp_mount/datasets_hmc/dynamic_restart","/continuum/datasets_hmc/dynamic_data/source/marche:/home/fp/fp_mount/datasets_hmc/dynamic_source","/continuum/datasets_hmc/dynamic_data/destination/marche/:/home/fp/fp_mount/datasets_hmc/dynamic_destination"]
    postprocessing_ddi_path:
      type: string
      description: "Path where to transfer the post-processing results in DDI"
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
  node_templates:
    PublicNet:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    ContinuumVM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePreProcessDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: {get_input: preprocessing_volumes}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePostProcessHydeDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: {get_input: postprocessing_hyde_volumes}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePostProcessHMCDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: {get_input: postprocessing_hmc_volumes}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WPS_GFS:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: preprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "1024 MB"
        volumes: {get_input: preprocessing_volumes}
        # docker_env_vars:  {get_input: preprocessing_environment_variables}
        docker_env_vars:  {concat: ["{\"WPS_START_DATE\": \"", get_input: preprocessing_start_date, "\", \"WPS_END_DATE\": \"", get_input: preprocessing_end_date, "\", \"WPS_MODE\": \"WRF\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    GFSData:
      type: org.lexis.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_end_date}
        number_of_past_days: 0
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GEOGData:
      type: org.lexis.nodes.DownloadGEOGData
      properties:
        output_directory: "/wps_data/geog"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WRF:
      type: org.heappe.nodes.Job
      metadata:
        task: computation
      properties:
        JobSpecification:
          Name: WRFJob
          Project: "OPEN-20-47"
          ClusterId: 2
          Tasks:
            - Name: WRFTask
              ClusterNodeTypeId: 7
              CommandTemplateId: 9
              TemplateParameterValues:
                - CommandParameterIdentifier: MPICores
                  ParameterValue: "48"
              WalltimeLimit: 36000
              MinCores: 48
              MaxCores: 48
              Priority: 4
              EnvironmentVariables:
                - Name: HDF5
                  Value: "./deps"
                - Name: NETCDF
                  Value: "./deps"
                - Name: CPPFLAGS
                  Value: "-I./deps/include"
                - Name: CFLAGS
                  Value: "-I./deps/include"
                - Name: CXXFLAGS
                  Value: "-I./deps/include"
                - Name: FCFLAGS
                  Value: "-I./deps/include"
                - Name: FFLAGS
                  Value: "-I./deps/include"
                - Name: LDFLAGS
                  Value: "-L./deps/lib"
                - Name: WRFIO_NCD_LARGE_FILE_SUPPORT
                  Value: "1"
                - Name: LD_LIBRARY_PATH
                  Value: "$LD_LIBRARY_PATH:./deps/lib"
                - Name: JASPERLIB
                  Value: "./deps/lib"
                - Name: JASPERINC
                  Value: "./deps/include"
              StandardOutputFile: "stdout"
              StandardErrorFile: "stderr"
              ProgressFile: "stdprog"
              LogFile: "stdlog"
    CopyToJobTask:
      type: org.lexis.datatransfer.nodes.CopySubDirToJobTask
      properties:
        task_name: WRFTask
        parent_directory: {get_input: preprocessing_output_directory}
        subdirectory_index: 0
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.SendInputsToJob
    CopyFromJobTask:
      type: org.lexis.datatransfer.nodes.CopyFromJobTask
      properties:
        task_name: WRFTask
        source_files_patterns: [ "auxhist*" ]
        destination_directory:  { concat: [get_input: postprocessing_hyde_inputs_directory, "/dynamic_data/"] }
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.GetResultsFromJob
    Continuum_Hyde_StaticData:
      type: org.lexis.nodes.ContinuumStaticData
      properties:
        url: https://code.it4i.cz/gan0035/artifacts/-/raw/master
        # Dataset created from git LFS (Large File Storage) at:
        # https://github.com/cima-lexis/fp-docker/tree/master/docker_testcase/datasets_hyde/static_data/gridded
        dataset: continuum_hyde_static_data_1.0.4.zip
        destination: { concat: [get_input: postprocessing_hyde_inputs_directory, "/static_data"] }
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Continuum_HMC_StaticData:
      type: org.lexis.nodes.ContinuumStaticData
      properties:
        url: https://code.it4i.cz/gan0035/artifacts/-/raw/master
        # Dataset created from git LFS (Large File Storage) at:
        # https://github.com/cima-lexis/fp-docker/tree/master/docker_testcase/datasets_hmc/static_data
        dataset: continuum_hmc_static_data_1.0.4.zip
        destination: { concat: [get_input: postprocessing_hmc_inputs_directory, "/static_data"] }
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Move_Hyde_Results:
      type: org.lexis.datatransfer.nodes.MoveFile
      properties:
        source_file: { concat: [get_input: postprocessing_hyde_inputs_directory, "/docker_data/*.nc.gz"] }
        destination: { concat: [get_input: postprocessing_hmc_inputs_directory, "/dynamic_data/source/marche"] }
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Webdrops:
      type: org.lexis.nodes.Webdrops
      properties:
        start_date: {get_input: preprocessing_start_date}
        download_type: "CONTINUUM"
        destination: { concat: [get_input: postprocessing_hyde_inputs_directory, "/dynamic_data"] }
        auth_url: "https://testauth.cimafoundation.org/auth/realms/webdrops/protocol/openid-connect/token"
        url: "http://webdrops.cimafoundation.org/app/"
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Continuum_Hyde:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_hyde_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        workdir: "/home/fp/fp_entrypoint/"
        volumes: {get_input: postprocessing_hyde_volumes}
        docker_env_vars: {concat: ["{\"RUN_TIME_NOW\": \"", get_input: postprocessing_run_date, "\",\"APP_MAIN\":\"fp_docker_entrypoint_app_main_hyde.py\",\"APP_CONFIG\":\"fp_docker_entrypoint_app_configuration_hyde.json\",\"TARGET_DATA_STATIC\": \"/home/fp/fp_mount/datasets_hyde/static/\",\"TARGET_DATA_DYNAMIC_RAW\": \"/home/fp/fp_mount/datasets_hyde/dynamic_raw/\",\"TARGET_DATA_DYNAMIC_PROCESSED\": \"/home/fp/fp_mount/datasets_hyde/dynamic_processed/\",\"RUN_TIME_STEPS_OBS\": \"36\",\"RUN_TIME_STEPS_FOR\": \"24\",\"RUN_NAME\": \"fp_hyde_run\",\"RUN_DOMAIN\": \"marche\",\"RUN_ENS\": \"false\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    Continuum_HMC:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_hmc_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        workdir: "/home/fp/fp_entrypoint/"
        volumes: {get_input: postprocessing_hmc_volumes}
        docker_env_vars: {concat: ["{\"RUN_TIME_NOW\": \"", get_input: postprocessing_run_date, "\",\"APP_MAIN\":\"fp_docker_entrypoint_app_main_hmc.py\",\"APP_CONFIG\":\"fp_docker_entrypoint_app_configuration_hmc.json\",\"TARGET_DATA_STATIC_GRIDDED\": \"/home/fp/fp_mount/datasets_hmc/static/gridded/\",\"TARGET_DATA_STATIC_POINT\": \"/home/fp/fp_mount/datasets_hmc/static/point/\",\"TARGET_DATA_DYNAMIC_RESTART\": \"/home/fp/fp_mount/datasets_hmc/dynamic_restart/\",\"TARGET_DATA_DYNAMIC_SOURCE\": \"/home/fp/fp_mount/datasets_hmc/dynamic_source/\",\"TARGET_DATA_DYNAMIC_DESTINATION\": \"/home/fp/fp_mount/datasets_hmc/dynamic_destination/\",\"RUN_TIME_STEPS_OBS\": \"24\",\"RUN_TIME_STEPS_FOR\": \"24\",\"RUN_NAME\": \"fp_hmc_run\",\"RUN_DOMAIN\": \"marche\",\"RUN_ENS\": \"false\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    EnableCloudAcessJob:
      type: org.ddi.nodes.EnableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: ContinuumVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.ddi.relationships.SameSite
    DisableCloudAcessJob:
      type: org.ddi.nodes.DisableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: ContinuumVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.ddi.relationships.SameSite
    MountStagingArea:
      type: org.lexis.datatransfer.nodes.MountStagingArea
      properties:
        destination_directory: "/mnt/cloud_staging_area"
        user_name: lexisclouduser
        group_name: lexiscloudgroup
      requirements:
        - mountCloudStagingAreaEnableCloudAcessJobCloud_staging_area_access:
            type_requirement: cloud_staging_area_access
            node: EnableCloudAcessJob
            capability: org.ddi.capabilities.CloudStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreateStagingAreaWRFResultDir:
      type: org.lexis.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "continuum_wrf_results"
        create_timestamp_destination_subdirectory: true
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountStagingArea
            capability: org.lexis.datatransfer.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreateStagingAreaResultDir:
      type: org.lexis.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "continuum_results"
        create_timestamp_destination_subdirectory: true
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountStagingArea
            capability: org.lexis.datatransfer.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageWRFResults:
      type: org.lexis.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: { concat: [get_input: postprocessing_hyde_inputs_directory, "/dynamic_data"] }
        destination_subdirectory: "wrf"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageContinuumResults:
      type: org.lexis.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/continuum/datasets_hmc/dynamic_data/destination/marche"
        destination_subdirectory: "continuum"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ContinuumVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIWRFJob:
      type: org.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"Continuum workflow\"], \"contributor\": [\"Continuum workflow\"], \"publisher\": [\"Continuum workflow\"], \"resourceType\": \"WRF result\", \"title\": \"Continuum Workflow WRF result - ", get_input: postprocessing_run_date, "\"}"]}
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
    CloudToDDIJob:
      type: org.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"Continuum workflow\"], \"contributor\": [\"Continuum workflow\"], \"publisher\": [\"Continuum workflow\"], \"resourceType\": \"Workflow result\", \"title\": \"Continuum Workflow result - ", get_input: postprocessing_run_date, "\"}"]}
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
    DeleteCloudWRFDataJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
    DeleteCloudDataJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
  outputs:
    ddi_post_process_results:
      description: DDI path to Continuum post-processing results
      value: { get_attribute: [ CloudToDDIJob, destination_directory_path ] }
    ddi_wrf_results:
      description: DDI path to Continuum WRF results
      value: { get_attribute: [ CloudToDDIWRFJob, destination_directory_path ] }
  workflows:
    install:
      steps:
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
    uninstall:
      steps:
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    Run:
      steps:
        Compute_install:
          target: ContinuumVM
          activities:
            - delegate: install
          on_success:
            - CreatePreProcessDirs_start
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_download
            - GEOGData_download
            - EnableCloudAcessJob_create
        GFSData_download:
          target: GFSData
          activities:
            - call_operation: custom.download
          on_success:
            - GFSData_done
        GFSData_done:
          target: GFSData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        GEOGData_download:
          target: GEOGData
          activities:
            - call_operation: custom.download
          on_success:
            - GEOGData_done
        GEOGData_done:
          target: GEOGData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        EnableCloudAcessJob_create:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - EnableCloudAcessJob_submit
        EnableCloudAcessJob_submit:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - EnableCloudAcessJob_submitted
        EnableCloudAcessJob_submitted:
          target: EnableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - EnableCloudAcessJob_run
        EnableCloudAcessJob_run:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - EnableCloudAcessJob_executed
        EnableCloudAcessJob_executed:
          target: EnableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - MountStagingArea_create
        MountStagingArea_create:
          target: MountStagingArea
          activities:
            - call_operation: Standard.create
          on_success:
            - MountStagingArea_created
        MountStagingArea_created:
          target: MountStagingArea
          activities:
            - set_state: created
          on_success:
            - MountStagingArea_start
        MountStagingArea_start:
          target: MountStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - MountStagingArea_started
        MountStagingArea_started:
          target: MountStagingArea
          activities:
            - set_state: started
          on_success:
            - Docker_create
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WRF_create
            - WPS_GFS_delete
        WPS_GFS_delete:
          target: WPS_GFS
          activities:
            - call_operation: Standard.delete
          on_success:
            - WPS_GFS_deleted
        WPS_GFS_deleted:
          target: WPS_GFS
          activities:
            - set_state: deleted
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreateStagingAreaWRFResultDir_start
            - CreatePostProcessHydeDirs_start
            - CreatePostProcessHMCDirs_start
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CreatePostProcessHydeDirs_start:
          target: CreatePostProcessHydeDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessHydeDirs_started
        CreatePostProcessHydeDirs_started:
          target: CreatePostProcessHydeDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CreatePostProcessHMCDirs_start:
          target: CreatePostProcessHMCDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessHMCDirs_started
        CreatePostProcessHMCDirs_started:
          target: CreatePostProcessHMCDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CopyFromJobTask_start:
          target: CopyFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJobTask_started
        CopyFromJobTask_started:
          target: CopyFromJobTask
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
            - WRF_disable_file_transfer
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
            - Webdrops_start
            - Continuum_Hyde_StaticData_start
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_created
        DeleteCloudWRFDataJob_created:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudWRFDataJob_submitted
        DeleteCloudWRFDataJob_submitted:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudWRFDataJob_run
        DeleteCloudWRFDataJob_run:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudWRFDataJob_executed
        DeleteCloudWRFDataJob_executed:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        Webdrops_start:
          target: Webdrops
          activities:
            - call_operation: Standard.start
          on_success:
            - Webdrops_started
        Webdrops_started:
          target: Webdrops
          activities:
            - set_state: started
          on_success:
            - Continuum_Hyde_create
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        Continuum_Hyde_StaticData_start:
          target: Continuum_Hyde_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_StaticData_started
        Continuum_Hyde_StaticData_started:
          target: Continuum_Hyde_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_Hyde_create
        Continuum_Hyde_create:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_Hyde_start
            - Continuum_HMC_StaticData_start
        Continuum_Hyde_start:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_started
        Continuum_Hyde_started:
          target: Continuum_Hyde
          activities:
            - set_state: started
          on_success:
            - Move_Hyde_Results_start
        Move_Hyde_Results_start:
          target: Move_Hyde_Results
          activities:
            - call_operation: Standard.start
          on_success:
            - Move_Hyde_Results_started
        Move_Hyde_Results_started:
          target: Move_Hyde_Results
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_StaticData_start:
          target: Continuum_HMC_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_StaticData_started
        Continuum_HMC_StaticData_started:
          target: Continuum_HMC_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_create:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_HMC_start
        Continuum_HMC_start:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_started
        Continuum_HMC_started:
          target: Continuum_HMC
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageContinuumResults_start
        StageContinuumResults_start:
          target: StageContinuumResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageContinuumResults_started
        StageContinuumResults_started:
          target: StageContinuumResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudDataJob_create
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ContinuumVM
          activities:
            - delegate: uninstall
    RunAfterPreProcess:
      steps:
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreateStagingAreaWRFResultDir_start
            - CreatePostProcessHydeDirs_start
            - CreatePostProcessHMCDirs_start
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CreatePostProcessHydeDirs_start:
          target: CreatePostProcessHydeDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessHydeDirs_started
        CreatePostProcessHydeDirs_started:
          target: CreatePostProcessHydeDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CreatePostProcessHMCDirs_start:
          target: CreatePostProcessHMCDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessHMCDirs_started
        CreatePostProcessHMCDirs_started:
          target: CreatePostProcessHMCDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CopyFromJobTask_start:
          target: CopyFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJobTask_started
        CopyFromJobTask_started:
          target: CopyFromJobTask
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
            - WRF_disable_file_transfer
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
            - Webdrops_start
            - Continuum_Hyde_StaticData_start
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_created
        DeleteCloudWRFDataJob_created:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudWRFDataJob_submitted
        DeleteCloudWRFDataJob_submitted:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudWRFDataJob_run
        DeleteCloudWRFDataJob_run:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudWRFDataJob_executed
        DeleteCloudWRFDataJob_executed:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        Webdrops_start:
          target: Webdrops
          activities:
            - call_operation: Standard.start
          on_success:
            - Webdrops_started
        Webdrops_started:
          target: Webdrops
          activities:
            - set_state: started
          on_success:
            - Continuum_Hyde_create
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        Continuum_Hyde_StaticData_start:
          target: Continuum_Hyde_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_StaticData_started
        Continuum_Hyde_StaticData_started:
          target: Continuum_Hyde_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_Hyde_create
        Continuum_Hyde_create:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_Hyde_start
            - Continuum_HMC_StaticData_start
        Continuum_Hyde_start:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_started
        Continuum_Hyde_started:
          target: Continuum_Hyde
          activities:
            - set_state: started
          on_success:
            - Move_Hyde_Results_start
        Move_Hyde_Results_start:
          target: Move_Hyde_Results
          activities:
            - call_operation: Standard.start
          on_success:
            - Move_Hyde_Results_started
        Move_Hyde_Results_started:
          target: Move_Hyde_Results
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_StaticData_start:
          target: Continuum_HMC_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_StaticData_started
        Continuum_HMC_StaticData_started:
          target: Continuum_HMC_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_create:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_HMC_start
        Continuum_HMC_start:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_started
        Continuum_HMC_started:
          target: Continuum_HMC
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageContinuumResults_start
        StageContinuumResults_start:
          target: StageContinuumResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageContinuumResults_started
        StageContinuumResults_started:
          target: StageContinuumResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudDataJob_create
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ContinuumVM
          activities:
            - delegate: uninstall
    cleanupRun:
      steps:
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ContinuumVM
          activities:
            - delegate: uninstall
    RunPostProcess:
      steps:
        Continuum_Hyde_StaticData_start:
          target: Continuum_Hyde_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_StaticData_started
        Continuum_Hyde_StaticData_started:
          target: Continuum_Hyde_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_Hyde_create
        Continuum_Hyde_create:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_Hyde_start
            - Continuum_HMC_StaticData_start
        Continuum_Hyde_start:
          target: Continuum_Hyde
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_Hyde_started
        Continuum_Hyde_started:
          target: Continuum_Hyde
          activities:
            - set_state: started
          on_success:
            - Move_Hyde_Results_start
        Move_Hyde_Results_start:
          target: Move_Hyde_Results
          activities:
            - call_operation: Standard.start
          on_success:
            - Move_Hyde_Results_started
        Move_Hyde_Results_started:
          target: Move_Hyde_Results
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_StaticData_start:
          target: Continuum_HMC_StaticData
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_StaticData_started
        Continuum_HMC_StaticData_started:
          target: Continuum_HMC_StaticData
          activities:
            - set_state: started
          on_success:
            - Continuum_HMC_create
        Continuum_HMC_create:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.create
          on_success:
            - Continuum_HMC_start
        Continuum_HMC_start:
          target: Continuum_HMC
          activities:
            - call_operation: Standard.start
          on_success:
            - Continuum_HMC_started
        Continuum_HMC_started:
          target: Continuum_HMC
          activities:
            - set_state: started
          on_success:
            - StageContinuumResults_start
        StageContinuumResults_start:
          target: StageContinuumResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageContinuumResults_started
        StageContinuumResults_started:
          target: StageContinuumResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudDataJob_create
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ContinuumVM
          activities:
            - delegate: uninstall
    testComputeUninstall:
      steps:
        Compute_uninstall:
          target: ContinuumVM
          activities:
            - delegate: uninstall
    testdeletewrf:
      steps:
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
    testdisablecloudaccess:
      steps:
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
    start:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: started
    stop:
      steps:
        stop_step:
          target: PublicNet
          activities:
            - set_state: stopped
    cancel:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: canceled
