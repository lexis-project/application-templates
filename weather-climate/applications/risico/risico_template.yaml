tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.wp7.RisicoTemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: RISICO template

imports:
  - yorc-types:1.1.0
  - yorc-openstack-types:3.0.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - org.lexis.common.heappe-types:1.0.6
  - org.lexis.common.ddi-types:0.1.4
  - org.lexis.common.dynamic-orchestration-types:0.1.0
  - org.ystia.docker.containers.docker.generic:3.0.0-SNAPSHOT
  - org.ystia.docker.ansible:3.0.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT
  - org.lexis.wp7.wps:0.1.1-SNAPSHOT
  - org.lexis.wp7.webdrops:0.1.0

topology_template:
  inputs:
    token:
      type: string
      description: "OpenID Connect token"
      required: true
    project_id:
      type: string
      description: "LEXIS project identifier"
      required: true
    preprocessing_start_date:
      type: string
      description: Download GFS files from this date, format YYYYMMDDHH
      required: true
    preprocessing_end_date:
      type: string
      description: Download GFS files up to this date, format YYYYMMDDHH
      required: true
    postprocessing_risico_run_date:
      type: string
      description: RISICO run date, format YYYYMMDD
      required: true
    preprocessing_image:
      type: string
      description: Pre-processing container repository path
      default: "cimafoundation/wps-da.gfs:v2.0.3"
      required: false
    preprocessing_observation_data_image:
      type: string
      description: Repository path of container downloading observation data
      default: "laurentg/lexisdn:1.0.0"
      required: false
    preprocessing_dataset_geographical_data_path:
      type: string
      description: Dataset containing geographical data
      default: project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/055b25ea-ba60-11eb-a44e-0050568fc9b5/static_geog_data.tar.gz
      # default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/69c0f740-33f0-11eb-8f85-0050568fcecc"
      required: false
    preprocessing_decrypt_dataset_geographical_data:
      type: boolean
      description: Should the input dataset be decrypted
      default: false
      required: false
    preprocessing_uncompress_dataset_geographical_data:
      type: boolean
      description: Should the input dataset be uncompressed
      default: true
      required: false
    preprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the pre-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/gfs:/input", "/wps_data/output/inputs:/output", "/mnt/cloud_staging_area/risico:/geogrid"]
    preprocessing_observation_data_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the post-processing container downloading observation data.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/observations:/output"]
    postprocessing_image:
      type: string
      description: Post-processing container repository path
      default: "laurentg/risico:0.3.1"
      required: false
    postprocessing_ddi_project_path:
      type: string
      description: "Path where to transfer the post-processing results in DDI"
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
      required: false
    postprocessing_encrypt_dataset_result:
      type: boolean
      description: Encrypt the result dataset
      default: false
      required: false
    postprocessing_compress_dataset_result:
      type: boolean
      description: Compress the result dataset
      default: false
      required: false
  node_templates:
    # Validation of the token provided in input
    # Exchanging this token to have an access and refresh tokens
    # for any component needing it in the workflow
    ValidateExchangeToken:
      type: org.lexis.common.dynamic.orchestration.nodes.ValidateAndExchangeToken
      properties:
        token: {get_input: token}
        project_id: { get_input: project_id }

    # Job gathering info on the input dataset:
    # - on which locations it is available
    # - size
    # - number of files
    # to take placement decisions on computing resources using this dataset
    InputDatasetInfoJob:
      type: org.lexis.common.ddi.nodes.GetDDIDatasetInfoJob
      properties:
        token: {get_input: token}
        dataset_path: {get_input: preprocessing_dataset_geographical_data_path}
    # Find the best cloud location depending on the input dataset and needed cloud resources
    FindCloudLocationJob:
      type: org.lexis.common.dynamic.orchestration.nodes.SetLocationsJob
      metadata:
        task: dynamic_orchestration
      properties:
        token: { get_input: token }
        project_id: { get_input: project_id }
      requirements:
        - InputDataset:
            type_requirement: input_dataset
            node: InputDatasetInfoJob
            capability: org.lexis.common.ddi.capabilities.DatasetInfo
            relationship: org.lexis.common.dynamic.orchestration.relationships.Dataset
        - CloudResourceVM:
            type_requirement: cloud_instance
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.dynamic.orchestration.relationships.CloudResource
    # Floating IP address network
    PublicNet:
      type: yorc.nodes.openstack.FloatingIP
    RisicoVM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    GetDDIAccess:
      type: org.lexis.common.ddi.nodes.DDIAccess
      requirements:
        - hostedOnComputeHost:
            type_requirement: os
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    DDIToCloudGEOGDatasetJob:
      type: org.lexis.common.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        decrypt: {get_input: preprocessing_decrypt_dataset_geographical_data}
        uncompress: {get_input: preprocessing_uncompress_dataset_geographical_data}
        ddi_dataset_path: { get_input: preprocessing_dataset_geographical_data_path }
        cloud_staging_area_directory_path: "risico_preprocessing_geog"
        timestamp_cloud_staging_area_directory: true
      requirements:
        - sameSite:
            type_requirement: os
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    MountGEOGDataset:
      type: org.lexis.common.ddi.nodes.SSHFSMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/risico"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.lexis.common.ddi.capabilities.DDIAccess
            relationship: org.lexis.common.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: DDIToCloudGEOGDatasetJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePreProcessDirs:
      type: org.lexis.common.datatransfer.nodes.CreateDirectories
      properties:
        directories: ["/wps_data/gfs", "/wps_data/output/inputs", "/wps_data/output/observations"]
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePostProcessDirs:
      type: org.lexis.common.datatransfer.nodes.CreateDirectories
      properties:
        directories:
          - "/risico_data/wrf"
          - "/risico_data/output"
          - "/risico_data/downloads"
          - "/risico_data/observations"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WPS_GFS:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: preprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "64 GB"
        volumes: {get_input: preprocessing_volumes}
        docker_env_vars:  {concat: ["{\"WPS_START_DATE\": \"", get_input: preprocessing_start_date, "\", \"WPS_END_DATE\": \"", get_input: preprocessing_end_date, "\", \"WPS_MODE\": \"WARMUPDA\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    GFSData_D_day:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_end_date}
        past_day_number: 0
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GFSData_day_before:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_end_date}
        past_day_number: 1
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GFSData_2_days_before:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_end_date}
        past_day_number: 2
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    # Download observation data needed by WRF 
    ObservationsWRF:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_observation_data_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "64 GB"
        volumes: {get_input: preprocessing_observation_data_volumes}
        docker_env_vars:  {concat: ["{\"START_DATE\": \"", get_input: preprocessing_start_date, "\", \"DOWNLOAD_TYPE\": \"WRFDAIT\", \"WEBDROPS_USER\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=user"], "\", \"WEBDROPS_PWD\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=password"], "\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    # Move results to match WRF inputs structure expectations
    MoveObservationData:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/wps_data/observations/*/*"
        destination: "/wps_data/output/observations"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    # Get pre-processing results details (size, number of files)
    GetPreprocessDatasetInfo:
      type: org.lexis.common.ddi.nodes.GetComputeInstanceDatasetInfo
      properties:
        dataset_path: "/wps_data/output"
      requirements:
        - host:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Find the best HPC location depending on the input dataset and needed HPC resources
    FindHPCLocationsJob:
      type: org.lexis.common.dynamic.orchestration.nodes.SetLocationsJob
      metadata:
        task: dynamic_orchestration
      properties:
        token: { get_input: token }
        project_id: { get_input: project_id }
      requirements:
        - InputDataset:
            type_requirement: input_dataset
            node: GetPreprocessDatasetInfo
            capability: org.lexis.common.ddi.capabilities.DatasetInfo
            relationship: org.lexis.common.dynamic.orchestration.relationships.Dataset
        - HPCResourceWRFJob:
            type_requirement: heappe_job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.dynamic.orchestration.relationships.HeappeJob
    WRF:
      type: org.lexis.common.heappe.nodes.Job
      metadata:
        task: computation
      properties:
        token: { get_input: token }
        JobSpecification:
          Name: WRFJob
          Project: "OPEN-20-47"
          ClusterId: 2
          Tasks:
            - Name: WRF Generic
              ClusterNodeTypeId: 7
              CommandTemplateId: 9
              TemplateParameterValues:
                - CommandParameterIdentifier: MPICores
                  ParameterValue: "48"
              WalltimeLimit: 36000
              MinCores: 48
              MaxCores: 48
              Priority: 4
              EnvironmentVariables:
                - Name: HDF5
                  Value: "./deps"
                - Name: NETCDF
                  Value: "./deps"
                - Name: CPPFLAGS
                  Value: "-I./deps/include"
                - Name: CFLAGS
                  Value: "-I./deps/include"
                - Name: CXXFLAGS
                  Value: "-I./deps/include"
                - Name: FCFLAGS
                  Value: "-I./deps/include"
                - Name: FFLAGS
                  Value: "-I./deps/include"
                - Name: LDFLAGS
                  Value: "-L./deps/lib"
                - Name: WRFIO_NCD_LARGE_FILE_SUPPORT
                  Value: "1"
                - Name: LD_LIBRARY_PATH
                  Value: "$LD_LIBRARY_PATH:./deps/lib"
                - Name: JASPERLIB
                  Value: "./deps/lib"
                - Name: JASPERINC
                  Value: "./deps/include"
              StandardOutputFile: "stdout"
              StandardErrorFile: "stderr"
              ProgressFile: "stdprog"
              LogFile: "stdlog"
    # copy the content of /wps_data/output: inputs and observations subdirs
    CopyToJobTask:
      type: org.lexis.common.datatransfer.nodes.CopyToJobTask
      properties:
        task_name: "WRF Generic"
        source_directory: /wps_data/output
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.heappe.relationships.SendInputsToJob
    CopyWRFResultsFromJobTask:
      type: org.lexis.common.datatransfer.nodes.CopyFromJobTask
      properties:
        task_name: "WRF Generic"
        source_files: [ "*/wrf00/auxhist*" ]
        destination_directory: "/risico_data/wrf"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.heappe.relationships.GetResultsFromJob
    # Download observation data needed by RISICO 
    ObservationsRISICO:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_observation_data_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "64 GB"
        volumes: ["/risico_data/downloads:/output"]
        docker_env_vars:  {concat: ["{\"START_DATE\": \"", get_input: preprocessing_start_date, "\", \"DOWNLOAD_TYPE\": \"RISICO\", \"WEBDROPS_USER\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=user"], "\", \"WEBDROPS_PWD\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=password"], "\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    # Move results to match RISICO inputs structure expectations
    MoveObservationRISICOData:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/risico_data/downloads/*/*/*"
        destination: "/risico_data/observations"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    RISICO:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        volumes: ["/risico_data/:/home/risico/data"]
        docker_env_vars:  {concat: ["{\"RISICO_RUN_DATE\": \"", get_input: postprocessing_risico_run_date, "0000\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    CreateStagingAreaWRFResultDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "wrf"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageWRFResults:
      type: org.lexis.common.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/risico_data/wrf"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIWRFJob:
      type: org.lexis.common.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"RISICO workflow\"], \"contributor\": [\"RISICO workflow\"], \"publisher\": [\"RISICO workflow\"], \"resourceType\": \"Workflow result\", \"title\": \"RISICO Workflow WRF result - ", get_input: postprocessing_risico_run_date, "\"}"]}
        token: { get_input: token }
        encrypt: {get_input: postprocessing_encrypt_dataset_result}
        compress: {get_input: postprocessing_compress_dataset_result}
        ddi_path: { get_input: postprocessing_ddi_project_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    CreateStagingAreaResultDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "risico_results"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageRISICOResults:
      type: org.lexis.common.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/risico_data/output"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIJob:
      type: org.lexis.common.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"RISICO workflow\"], \"contributor\": [\"RISICO workflow\"], \"publisher\": [\"RISICO workflow\"], \"resourceType\": \"Workflow result\", \"title\": \"RISICO Workflow result - ", get_input: postprocessing_risico_run_date, "\"}"]}
        token: { get_input: token }
        encrypt: {get_input: postprocessing_encrypt_dataset_result}
        compress: {get_input: postprocessing_compress_dataset_result}
        ddi_path: { get_input: postprocessing_ddi_project_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    DeleteCloudGEOGDataJob:
      type: org.lexis.common.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: DDIToCloudGEOGDatasetJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
  outputs:
    computation_dataset_wrf_result_path:
      description: DDI path to RISICO WRF results
      value: { get_attribute: [ CloudToDDIWRFJob, destination_path ] }
    postprocessing_ddi_project_path:
      description: DDI path to RISICO post-processing results
      value: { get_attribute: [ CloudToDDIJob, destination_path ] }
  workflows:
    # At deployment time, validating the input token and exchanging it
    # to get an access/refresh token for the orchestrator
    install:
      steps:
        ValidateExchangeToken_start:
          target: ValidateExchangeToken
          activities:
            - call_operation: Standard.start
          on_success:
            - ValidateExchangeToken_started
        ValidateExchangeToken_started:
          target: ValidateExchangeToken
          activities:
            - set_state: started
    uninstall:
      steps:
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    Run:
      steps:
        # Submit DDI job to get info on dataset (DDI location where it is available, size...)
        InputDatasetInfoJob_submit:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - InputDatasetInfoJob_run
        InputDatasetInfoJob_run:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - InputDatasetInfoJob_executed
        InputDatasetInfoJob_executed:
          target: InputDatasetInfoJob
          activities:
            - set_state: executed
          on_success:
            - FindCloudLocationJob_submit
        # Submit the computation to find the best location from these inputs
        FindCloudLocationJob_submit:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindCloudLocationJob_run
        FindCloudLocationJob_run:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindCloudLocationJob_executed
        FindCloudLocationJob_executed:
          target: FindCloudLocationJob
          activities:
            - set_state: executed
          on_success:
            - DDIToCloudGEOGDatasetJob_create
            - Network_install
        # Get a floating IP address for the Cloud Compute instance
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
          on_success:
            - Compute_install
        Compute_install:
          target: RisicoVM
          activities:
            - delegate: install
          on_success:
            - GetDDIAccess_start
            - CreatePreProcessDirs_start
            - Docker_create
        GetDDIAccess_start:
          target: GetDDIAccess
          activities:
            - call_operation: Standard.start
          on_success:
            - GetDDIAccess_started
        GetDDIAccess_started:
          target: GetDDIAccess
          activities:
            - set_state: started
          on_success:
            - MountGEOGDataset_create
        DDIToCloudGEOGDatasetJob_create:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudGEOGDatasetJob_submit
        DDIToCloudGEOGDatasetJob_submit:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudGEOGDatasetJob_submitted
        DDIToCloudGEOGDatasetJob_submitted:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudGEOGDatasetJob_run
        DDIToCloudGEOGDatasetJob_run:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudGEOGDatasetJob_executed
        DDIToCloudGEOGDatasetJob_executed:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_create
        MountGEOGDataset_create:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountGEOGDataset_created
        MountGEOGDataset_created:
          target: MountGEOGDataset
          activities:
            - set_state: created
          on_success:
            - MountGEOGDataset_refresh_token
        MountGEOGDataset_refresh_token:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_start
        MountGEOGDataset_start:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountGEOGDataset_started
        MountGEOGDataset_started:
          target: MountGEOGDataset
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_D_day_start
            - GFSData_day_before_start
            - GFSData_2_days_before_start
        GFSData_D_day_start:
          target: GFSData_D_day
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_D_day_started
        GFSData_D_day_started:
          target: GFSData_D_day
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_day_before_start:
          target: GFSData_day_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_day_before_started
        GFSData_day_before_started:
          target: GFSData_day_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_2_days_before_start:
          target: GFSData_2_days_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_2_days_before_started
        GFSData_2_days_before_started:
          target: GFSData_2_days_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
            - ObservationsWRF_create
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_delete
        WPS_GFS_delete:
          target: WPS_GFS
          activities:
            - call_operation: Standard.delete
          on_success:
            - WPS_GFS_deleted
        WPS_GFS_deleted:
          target: WPS_GFS
          activities:
            - set_state: deleted
          on_success:
            - GetPreprocessDatasetInfo_create
        ObservationsWRF_create:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsWRF_start
        ObservationsWRF_start:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsWRF_started
        ObservationsWRF_started:
          target: ObservationsWRF
          activities:
            - set_state: started
          on_success:
            - ObservationsWRF_delete
        ObservationsWRF_delete:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsWRF_deleted
        ObservationsWRF_deleted:
          target: ObservationsWRF
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationData_start
        MoveObservationData_start:
          target: MoveObservationData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationData_started
        MoveObservationData_started:
          target: MoveObservationData
          activities:
            - set_state: started
          on_success:
            - GetPreprocessDatasetInfo_create
        GetPreprocessDatasetInfo_create:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.create
          on_success:
            - GetPreprocessDatasetInfo_start
        GetPreprocessDatasetInfo_start:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.start
          on_success:
            - GetPreprocessDatasetInfo_started
        GetPreprocessDatasetInfo_started:
          target: GetPreprocessDatasetInfo
          activities:
            - set_state: started
          on_success:
            - FindHPCLocationsJob_submit
        FindHPCLocationsJob_submit:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindHPCLocationsJob_run
        FindHPCLocationsJob_run:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindHPCLocationsJob_executed
        FindHPCLocationsJob_executed:
          target: FindHPCLocationsJob
          activities:
            - set_state: executed
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaWRFResultDir_start
            - CopyWRFResultsFromJobTask_start
            - ObservationsRISICO_create
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
        ObservationsRISICO_create:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsRISICO_start
        ObservationsRISICO_start:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsRISICO_started
        ObservationsRISICO_started:
          target: ObservationsRISICO
          activities:
            - set_state: started
          on_success:
            - ObservationsRISICO_delete
        ObservationsRISICO_delete:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsRISICO_deleted
        ObservationsRISICO_deleted:
          target: ObservationsRISICO
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationRISICOData_start
        MoveObservationRISICOData_start:
          target: MoveObservationRISICOData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationRISICOData_started
        MoveObservationRISICOData_started:
          target: MoveObservationRISICOData
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        CopyWRFResultsFromJobTask_start:
          target: CopyWRFResultsFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyWRFResultsFromJobTask_started
        CopyWRFResultsFromJobTask_started:
          target: CopyWRFResultsFromJobTask
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
            - StageWRFResults_start
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudGEOGDataJob_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageRISICOResults_start
        StageRISICOResults_start:
          target: StageRISICOResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageRISICOResults_started
        StageRISICOResults_started:
          target: StageRISICOResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_refresh_token_for_stop
        MountGEOGDataset_refresh_token_for_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
    cleanupRun:
      steps:
        MountGEOGDataset_refresh_token:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
    RunComputation:
      steps:
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
    RunPostProcessing:
      steps:
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaWRFResultDir_start
            - CopyWRFResultsFromJobTask_start
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
        CopyWRFResultsFromJobTask_start:
          target: CopyWRFResultsFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyWRFResultsFromJobTask_started
        CopyWRFResultsFromJobTask_started:
          target: CopyWRFResultsFromJobTask
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
            - StageWRFResults_start
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudGEOGDataJob_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageRISICOResults_start
        StageRISICOResults_start:
          target: StageRISICOResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageRISICOResults_started
        StageRISICOResults_started:
          target: StageRISICOResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_refresh_token_for_stop
        MountGEOGDataset_refresh_token_for_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
    cleanupHPC:
      steps:
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
    testWRFObservationData:
      steps:
        ObservationsWRF_create:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsWRF_start
        ObservationsWRF_start:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsWRF_started
        ObservationsWRF_started:
          target: ObservationsWRF
          activities:
            - set_state: started
          on_success:
            - ObservationsWRF_delete
        ObservationsWRF_delete:
          target: ObservationsWRF
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsWRF_deleted
        ObservationsWRF_deleted:
          target: ObservationsWRF
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationData_start
        MoveObservationData_start:
          target: MoveObservationData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationData_started
        MoveObservationData_started:
          target: MoveObservationData
          activities:
            - set_state: started
    testRISICOObservationData:
      steps:
        ObservationsRISICO_create:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsRISICO_start
        ObservationsRISICO_start:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsRISICO_started
        ObservationsRISICO_started:
          target: ObservationsRISICO
          activities:
            - set_state: started
          on_success:
            - ObservationsRISICO_delete
        ObservationsRISICO_delete:
          target: ObservationsRISICO
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsRISICO_deleted
        ObservationsRISICO_deleted:
          target: ObservationsRISICO
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationRISICOData_start
        MoveObservationRISICOData_start:
          target: MoveObservationRISICOData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationRISICOData_started
        MoveObservationRISICOData_started:
          target: MoveObservationRISICOData
          activities:
            - set_state: started
