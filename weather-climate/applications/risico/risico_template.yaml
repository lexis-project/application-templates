tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: Risico
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: ""

imports:
  - yorc-types:1.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:2.2.0-SM10
  - alien-base-types:2.2.0-SM10
  - heappe-types:0.1.0
  - ddi-types:0.1.0
  - org.ystia.docker.containers.docker.generic:2.2.0-SNAPSHOT
  - org.ystia.docker.ansible:2.2.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.0
  - org.lexis.weather.wps:0.1.0

topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "Access token"
    preprocessing_gfs_files_start_date:
      type: string
      description: Download GFS files from this date, format YYYYMMDDHH
      required: true
    preprocessing_gfs_files_end_date:
      type: string
      description: Download GFS files up to this date, format YYYYMMDDHH
      required: true
    preprocessing_image:
      type: string
      description: Pre-processing container repository path
      default: "laurentg/wps.gfs"
    preprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the pre-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/gfs:/input", "/wps_data/output:/output", "/wps_data/geog/WPS_GEOG:/geogrid"]
    preprocessing_environment_variables:
      type: map
      entry_schema:
        type: string
      description: |
        Environment variables for the pre-processing container.
      # default: {WPS_START_DATE: "2020030112", WPS_END_DATE: "2020030115"}
      required: false
    preprocessing_output_directory:
      type: string
      description: Directory where preprocessing results will be stored
      default: /wps_data/output
    postprocessing_image:
      type: string
      description: Post-processing container repository path
      default: "laurentg/risico"
    postprocessing_input_directory:
      type: string
      description: Directory where postprocessing data will be stored
      default: /risico_data/
    postprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the post-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/risico_data/:/home/risico/data"]
    postprocessing_environment_variables:
      type: map
      entry_schema:
        type: string
      description: |
        Environment variables for the pre-processing container.
      # default: { RISICO_RUN_DATE: "202003010000" }
      required: false
    postprocessing_risico_run_date:
      type: string
      description: RISICO run date, format YYYYMMDD
      required: true
    postprocessing_ddi_path:
      type: string
      description: "Path where to transfer the post-processing results in DDI"
      default: "project/wp7/risico/results"
  node_templates:
    PublicNet:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    VirtualMachine:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePreProcessDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: {get_input: preprocessing_volumes}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePostProcessDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: {concat: ["[\"", get_input: postprocessing_input_directory, "/wrf\", \"", get_input: postprocessing_input_directory, "/output\"]"]}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WPS_GFS:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: preprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        mem_share: "128 MB"
        volumes: {get_input: preprocessing_volumes}
        # docker_env_vars:  {get_input: preprocessing_environment_variables}
        docker_env_vars:  {concat: ["{\"WPS_START_DATE\": \"", get_input: preprocessing_gfs_files_start_date, "\", \"WPS_END_DATE\": \"", get_input: preprocessing_gfs_files_end_date, "\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    GFSData:
      type: org.lexis.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_gfs_files_start_date}
        end_date: {get_input: preprocessing_gfs_files_end_date}
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GEOGData:
      type: org.lexis.nodes.GEOGData
      properties:
        output_directory: "/wps_data/geog"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WRF:
      type: org.heappe.nodes.Job
      metadata:
        task: computation
      properties:
        jobSpecification: 
          name: WRFJob
          project: WP7
          clusterNodeTypeId: 6
          priority: 4
          minCores: 48
          maxCores: 48
          waitingLimit: 0
          walltimeLimit: 7200
          tasks: 
            - name: WRFTask
              commandTemplateId: 4
              templateParameterValues: 
                - commandParameterIdentifier: MPICores
                  parameterValue: "48"
              environmentVariables:
                - name: HDF5
                  value: "./deps"
                - name: NETCDF
                  value: "./deps"
                - name: CPPFLAGS
                  value: "-I./deps/include"
                - name: CFLAGS
                  value: "-I./deps/include"
                - name: CXXFLAGS
                  value: "-I./deps/include"
                - name: FCFLAGS
                  value: "-I./deps/include"
                - name: FFLAGS
                  value: "-I./deps/include"
                - name: LDFLAGS
                  value: "-L./deps/lib"
                - name: WRFIO_NCD_LARGE_FILE_SUPPORT
                  value: "1"
                - name: LD_LIBRARY_PATH
                  value: "$LD_LIBRARY_PATH:./deps/lib"
                - name: JASPERLIB
                  value: "./deps/lib"
                - name: JASPERINC
                  value: "./deps/include"
              minCores: 48
              maxCores: 48
              walltimeLimit: 7200
              standardOutputFile: "stdout"
              standardErrorFile: "stderr"
              progressFile: "stdprog"
              logFile: "stdlog"
    CopyToJob:
      type: org.lexis.datatransfer.nodes.CopyToJob
      properties:
        source_directory: {get_input: preprocessing_output_directory}
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.SendInputsToJob
    CopyFromJob:
      type: org.lexis.datatransfer.nodes.CopyFromJob
      properties:
        source_files_pattern: "auxhist*"
        destination_directory:  { concat: [get_input: postprocessing_input_directory, "/wrf"] }
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.GetResultsFromJob
    RISICO:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        mem_share: "128 MB"
        volumes: {get_input: postprocessing_volumes}
        # docker_env_vars:  {get_input: postprocessing_environment_variables}
        docker_env_vars:  {concat: ["{\"RISICO_RUN_DATE\": \"", get_input: postprocessing_risico_run_date, "0000\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    EnableCloudAcessJob:
      type: org.ddi.nodes.EnableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: VirtualMachine
            capability: tosca.capabilities.OperatingSystem
            relationship: org.ddi.relationships.SameSite
    DisableCloudAcessJob:
      type: org.ddi.nodes.DisableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: VirtualMachine
            capability: tosca.capabilities.OperatingSystem
            relationship: org.ddi.relationships.SameSite
    MountStagingArea:
      type: org.lexis.datatransfer.nodes.MountStagingArea
      properties:
        mount_point: "/mnt/cloud_staging_area"
        user_name: lexisclouduser
        group_name: lexiscloudgroup
      requirements:
        - mountCloudStagingAreaEnableCloudAcessJobCloud_staging_area_access:
            type_requirement: cloud_staging_area_access
            node: EnableCloudAcessJob
            capability: org.ddi.capabilities.CloudStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CopyToStagingArea:
      type: org.lexis.datatransfer.nodes.CopyToStagingArea
      properties:
        source_directory: {concat: [get_input: postprocessing_input_directory, "/output"]}
        destination_directory: "risico_results"
        create_timestamp_destination_subdirectory: true
      requirements:
        - mountedCloudStagingAreaMountStagingAreaMounted_staging_area:
            type_requirement: mounted_staging_area
            node: MountStagingArea
            capability: org.lexis.datatransfer.MountedStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: VirtualMachine
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIJob:
      type: org.ddi.nodes.CloudToDDIJob
      properties:
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_path }
      requirements:
        - datasetProviderCopyToStagingAreaDataset_provider:
            type_requirement: dataset_provider
            node: CopyToStagingArea
            capability: org.ddi.capabilities.CloudAreaDatasetProvider
            relationship: org.ddi.relationships.DatasetProvider
    DeleteCloudDataJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - datasetProviderCopyToStagingAreaDataset_provider:
            type_requirement: dataset_provider
            node: CopyToStagingArea
            capability: org.ddi.capabilities.CloudAreaDatasetProvider
            relationship: org.ddi.relationships.DatasetProvider
  outputs:
    ddi_post_process_results:
      description: DDI path to RISICO post-processing results
      value: { get_attribute: [ CloudToDDIJob, ddi_dataset_path ] }
  workflows:
    install:
      steps:
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
    uninstall:
      steps:
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    Run:
      steps:
        Compute_install:
          target: VirtualMachine
          activities:
            - delegate: install
          on_success:
            - CreatePreProcessDirs_start
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_download
            - GEOGData_download
            - EnableCloudAcessJob_create
        GFSData_download:
          target: GFSData
          activities:
            - call_operation: custom.download
          on_success:
            - GFSData_done
        GFSData_done:
          target: GFSData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        GEOGData_download:
          target: GEOGData
          activities:
            - call_operation: custom.download
          on_success:
            - GEOGData_done
        GEOGData_done:
          target: GEOGData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        EnableCloudAcessJob_create:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - EnableCloudAcessJob_submit
        EnableCloudAcessJob_submit:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - EnableCloudAcessJob_submitted
        EnableCloudAcessJob_submitted:
          target: EnableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - EnableCloudAcessJob_run
        EnableCloudAcessJob_run:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - EnableCloudAcessJob_executed
        EnableCloudAcessJob_executed:
          target: EnableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - MountStagingArea_create
        MountStagingArea_create:
          target: MountStagingArea
          activities:
            - call_operation: Standard.create
          on_success:
            - MountStagingArea_created
        MountStagingArea_created:
          target: MountStagingArea
          activities:
            - set_state: created
          on_success:
            - MountStagingArea_start
        MountStagingArea_start:
          target: MountStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - MountStagingArea_started
        MountStagingArea_started:
          target: MountStagingArea
          activities:
            - set_state: started
          on_success:
            - Docker_create
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJob_start
        CopyToJob_start:
          target: CopyToJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJob_started
        CopyToJob_started:
          target: CopyToJob
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJob_start
        CopyFromJob_start:
          target: CopyFromJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJob_started
        CopyFromJob_started:
          target: CopyFromJob
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CopyToStagingArea_create
        CopyToStagingArea_create:
          target: CopyToStagingArea
          activities:
            - call_operation: Standard.create
          on_success:
            - CopyToStagingArea_created
        CopyToStagingArea_created:
          target: CopyToStagingArea
          activities:
            - set_state: created
          on_success:
            - CopyToStagingArea_start
        CopyToStagingArea_start:
          target: CopyToStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToStagingArea_started
        CopyToStagingArea_started:
          target: CopyToStagingArea
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudDataJob_create
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: VirtualMachine
          activities:
            - delegate: uninstall
    cleanupRun:
      steps:
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: VirtualMachine
          activities:
            - delegate: uninstall
    testRun:
      steps:
        GFSData_download:
          target: GFSData
          activities:
            - call_operation: custom.download
          on_success:
            - GFSData_done
        GFSData_done:
          target: GFSData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        GEOGData_download:
          target: GEOGData
          activities:
            - call_operation: custom.download
          on_success:
            - GEOGData_done
        GEOGData_done:
          target: GEOGData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJob_start
        CopyToJob_start:
          target: CopyToJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJob_started
        CopyToJob_started:
          target: CopyToJob
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJob_start
        CopyFromJob_start:
          target: CopyFromJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJob_started
        CopyFromJob_started:
          target: CopyFromJob
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
    testafterinput:
      steps:
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJob_start
        CopyToJob_start:
          target: CopyToJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJob_started
        CopyToJob_started:
          target: CopyToJob
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJob_start
        CopyFromJob_start:
          target: CopyFromJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJob_started
        CopyFromJob_started:
          target: CopyFromJob
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
    testcontainercreatestart:
      steps:
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
    testcopy:
      steps:
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJob_start        
        CopyToJob_start:
          target: CopyToJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJob_started
        CopyToJob_started:
          target: CopyToJob
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
    testpostprocess:
      steps:
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - CopyFromJob_start
        CopyFromJob_start:
          target: CopyFromJob
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJob_started
        CopyFromJob_started:
          target: CopyFromJob
          activities:
            - set_state: started
          on_success:
            - RISICO_create
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
    testcomputeuninstall:
      steps:
        Compute_uninstall:
          target: VirtualMachine
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    testdeletewrf:
      steps:
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
    testrisico:
      steps:
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
    start:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: started
    stop:
      steps:
        stop_step:
          target: PublicNet
          activities:
            - set_state: stopped
    cancel:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: canceled
