tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.wp7.ADMSPostProcessingTemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: ADMS post-processing template

imports:
  - yorc-types:1.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - org.lexis.common.ddi-types:0.1.2
  - org.ystia.docker.containers.docker.generic:3.0.0-SNAPSHOT
  - org.ystia.docker.ansible:3.0.0-SNAPSHOT
  - org.ystia.docker.images:3.0.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT

topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "OpenID Connect token"
    postprocessing_dataset_wrf_results_path:
      type: string
      description: WRF results dataset path in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/11d5558c-2809-11eb-88f6-0050568fc9b5"
      required: false
    postprocessing_image:
      type: string
      description: Post-processing docker image
      default: "adms/ncl:1.0.0"
      required: false
    postprocessing_dataset_docker_image_path:
      type: string
      description: Post-processing docker image tar archive path in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/89ddda90-1918-11eb-b6d1-0050568fc9b5"
      required: false
    postprocessing_dataset_ncl_script:
      type: string
      description: Post-processing NCL script path in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/10d9e69e-e013-11eb-9c8d-0050568fc9b5"
      required: false
    postprocessing_input_directory:
      type: string
      description: Directory where postprocessing data will be stored
      default: /adms_data/
      required: false
    postprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the post-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/adms_data/:/wrfdata"]
      required: false
    postprocessing_ddi_project_path:
      type: string
      description: Path where to transfer the post-processing results in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
  node_templates:
    PublicNet:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    ADMS_VM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            # num_cpus: 10
            num_cpus: 2
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    EnableCloudAcessJob:
      type: org.lexis.common.ddi.nodes.EnableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: ADMS_VM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    DisableCloudAcessJob:
      type: org.lexis.common.ddi.nodes.DisableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: ADMS_VM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    MountStagingArea:
      type: org.lexis.common.datatransfer.nodes.MountStagingArea
      properties:
        destination_directory: "/mnt/cloud_staging_area"
        user_name: lexisclouduser
        group_name: lexiscloudgroup
      requirements:
        - mountCloudStagingAreaEnableCloudAcessJobCloud_staging_area_access:
            type_requirement: cloud_staging_area_access
            node: EnableCloudAcessJob
            capability: org.lexis.common.ddi.capabilities.CloudStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreateStagingAreaADMSDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "adms_postprocessing"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountStagingArea
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    DDIToCloudDockerImageJob:
      type: org.lexis.common.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: postprocessing_dataset_docker_image_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    DDIToCloudNCLScriptJob:
      type: org.lexis.common.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: postprocessing_dataset_ncl_script }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    FindArchive:
      type: org.lexis.common.datatransfer.nodes.FindDockerImageArchiveInStagingAreaDirectory
      properties:
        shell_patterns: ["*.tar*", "*.tgz"]
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    ImageLoader:
      type: org.ystia.docker.images.RuntimePathArchiveLoader
      properties:
        name: { get_input: postprocessing_image }
        force_load: true
      requirements:
        - archive_provider:
            type_requirement: archive_provider
            node: FindArchive
            capability: org.ystia.docker.images.capabilities.ArchiveProvider
            relationship: org.ystia.docker.images.relationships.ArchiveProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    FindNCLScript:
      type: org.lexis.common.datatransfer.nodes.FindFileInStagingAreaDirectory
      properties:
        shell_patterns: {concat: ["[\"mkMET-", get_input: postprocessing_adms_type, "*.ncl\"]"]}
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CopyNCLScriptFromStagingArea:
      type: org.lexis.common.datatransfer.nodes.CopyFromStagingArea
      properties:
        destination_directory:  {get_input: postprocessing_input_directory}
      requirements:
        - file_provider:
            type_requirement: file_provider
            node: FindNCLScript
            capability: org.lexis.common.datatransfer.capabilities.FileProvider
            relationship: org.lexis.common.datatransfer.relationships.FileProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    DDIToCloudWRFJob:
      type: org.lexis.common.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: postprocessing_dataset_wrf_results_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    FindWRFiles:
      type: org.lexis.common.datatransfer.nodes.FindFilesInStagingAreaDirectory
      properties:
        shell_patterns: ["auxhist*"]
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CopyWRFFiles:
      type: org.lexis.common.datatransfer.nodes.CopyFilesFromProvider
      properties:
        destination_directory:  { concat: [get_input: postprocessing_input_directory, "/DATA-WRF/"] }
      requirements:
        - files_provider:
            type_requirement: files_provider
            node: FindWRFiles
            capability: org.lexis.common.datatransfer.capabilities.FilesProvider
            relationship: org.lexis.common.datatransfer.relationships.FilesProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WRFToMet:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        volumes: {get_input: postprocessing_volumes}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    StageMETResults:
      type: org.lexis.common.datatransfer.nodes.CopyFilesToStagingAreaDirectory
      properties:
        source_directory: { concat: [get_input: postprocessing_input_directory, "/DATA-WRF"] }
        source_files: [ "*.met" ]
        destination_subdirectory: "met"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIJob:
      type: org.lexis.common.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"ADMS workflow\"], \"contributor\": [\"ADMS workflow\"], \"publisher\": [\"ADMS workflow\"], \"resourceType\": \"Dataset\", \"title\": \"ADMS Workflow result - ", get_input: preprocessing_start_date, "\"}"]}
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_project_path }
        source_subdirectory: "met"
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    DeleteCloudDataJob:
      type: org.lexis.common.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaADMSDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
  workflows:
    install:
      steps:
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
    uninstall:
      steps:
        Compute_uninstall:
          target: ADMS_VM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    start:
      steps:
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
    stop:
      steps:
        Docker_stop:
          target: Docker
          activities:
            - call_operation: Standard.stop
          on_success:
            - Docker_stopped
        Docker_stopped:
          target: Docker
          activities:
            - set_state: stopped
    Run:
      steps:
        Compute_install:
          target: ADMS_VM
          activities:
            - delegate: install
          on_success:
            - Docker_create
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_created
        Docker_created:
          target: Docker
          activities:
            - set_state: created
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_configured
        Docker_configured:
          target: Docker
          activities:
            - set_state: configured
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - EnableCloudAcessJob_create
        EnableCloudAcessJob_create:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - EnableCloudAcessJob_submit
        EnableCloudAcessJob_submit:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - EnableCloudAcessJob_submitted
        EnableCloudAcessJob_submitted:
          target: EnableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - EnableCloudAcessJob_run
        EnableCloudAcessJob_run:
          target: EnableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - EnableCloudAcessJob_executed
        EnableCloudAcessJob_executed:
          target: EnableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - MountStagingArea_create
        MountStagingArea_create:
          target: MountStagingArea
          activities:
            - call_operation: Standard.create
          on_success:
            - MountStagingArea_created
        MountStagingArea_created:
          target: MountStagingArea
          activities:
            - set_state: created
          on_success:
            - MountStagingArea_start
        MountStagingArea_start:
          target: MountStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - MountStagingArea_started
        MountStagingArea_started:
          target: MountStagingArea
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaADMSDir_start
        CreateStagingAreaADMSDir_start:
          target: CreateStagingAreaADMSDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaADMSDir_started
        CreateStagingAreaADMSDir_started:
          target: CreateStagingAreaADMSDir
          activities:
            - set_state: started
          on_success:
            - DDIToCloudDockerImageJob_create
            - DDIToCloudNCLScriptJob_create
            - DDIToCloudWRFJob_create
        DDIToCloudDockerImageJob_create:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudDockerImageJob_submit
        DDIToCloudDockerImageJob_submit:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudDockerImageJob_submitted
        DDIToCloudDockerImageJob_submitted:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudDockerImageJob_run
        DDIToCloudDockerImageJob_run:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudDockerImageJob_executed
        DDIToCloudDockerImageJob_executed:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: executed
          on_success:
            - FindArchive_start
        FindArchive_start:
          target: FindArchive
          activities:
            - call_operation: Standard.start
          on_success:
            - FindArchive_started
        FindArchive_started:
          target: FindArchive
          activities:
            - set_state: started
          on_success:
            - ImageLoader_create
        ImageLoader_create:
          target: ImageLoader
          activities:
            - call_operation: Standard.create
          on_success:
            - ImageLoader_created
        ImageLoader_created:
          target: ImageLoader
          activities:
            - set_state: created
          on_success:
            - ImageLoader_start
        ImageLoader_start:
          target: ImageLoader
          activities:
            - call_operation: Standard.start
          on_success:
            - ImageLoader_started
        ImageLoader_started:
          target: ImageLoader
          activities:
            - set_state: started
          on_success:
            - WRFToMet_create
        DDIToCloudNCLScriptJob_create:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudNCLScriptJob_submit
        DDIToCloudNCLScriptJob_submit:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudNCLScriptJob_submitted
        DDIToCloudNCLScriptJob_submitted:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudNCLScriptJob_run
        DDIToCloudNCLScriptJob_run:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudNCLScriptJob_executed
        DDIToCloudNCLScriptJob_executed:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: executed
          on_success:
            - FindNCLScript_start
        FindNCLScript_start:
          target: FindNCLScript
          activities:
            - call_operation: Standard.start
          on_success:
            - FindNCLScript_started
        FindNCLScript_started:
          target: FindNCLScript
          activities:
            - set_state: started
          on_success:
            - CopyNCLScriptFromStagingArea_start
        CopyNCLScriptFromStagingArea_start:
          target: CopyNCLScriptFromStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyNCLScriptFromStagingArea_started
        CopyNCLScriptFromStagingArea_started:
          target: CopyNCLScriptFromStagingArea
          activities:
            - set_state: started
          on_success:
            - WRFToMet_create
        DDIToCloudWRFJob_create:
          target: DDIToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudWRFJob_submit
        DDIToCloudWRFJob_submit:
          target: DDIToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudWRFJob_submitted
        DDIToCloudWRFJob_submitted:
          target: DDIToCloudWRFJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudWRFJob_run
        DDIToCloudWRFJob_run:
          target: DDIToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudWRFJob_executed
        DDIToCloudWRFJob_executed:
          target: DDIToCloudWRFJob
          activities:
            - set_state: executed
          on_success:
            - FindWRFiles_start
        FindWRFiles_start:
          target: FindWRFiles
          activities:
            - call_operation: Standard.start
          on_success:
            - FindWRFiles_started
        FindWRFiles_started:
          target: FindWRFiles
          activities:
            - set_state: started
          on_success:
            - CopyWRFFiles_start
        CopyWRFFiles_start:
          target: CopyWRFFiles
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyWRFFiles_started
        CopyWRFFiles_started:
          target: CopyWRFFiles
          activities:
            - set_state: started
          on_success:
            - WRFToMet_create
        WRFToMet_create:
          target: WRFToMet
          activities:
            - call_operation: Standard.create
          on_success:
            - WRFToMet_start
        WRFToMet_start:
          target: WRFToMet
          activities:
            - call_operation: Standard.start
          on_success:
            - WRFToMet_started
        WRFToMet_started:
          target: WRFToMet
          activities:
            - set_state: started
          on_success:
            - StageMETResults_start
        StageMETResults_start:
          target: StageMETResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageMETResults_started
        StageMETResults_started:
          target: StageMETResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudDataJob_create
        DeleteCloudDataJob_create:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataJob_created
        DeleteCloudDataJob_created:
          target: DeleteCloudDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataJob_submit
        DeleteCloudDataJob_submit:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataJob_submitted
        DeleteCloudDataJob_submitted:
          target: DeleteCloudDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataJob_run
        DeleteCloudDataJob_run:
          target: DeleteCloudDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataJob_executed
        DeleteCloudDataJob_executed:
          target: DeleteCloudDataJob
          activities:
            - set_state: executed
          on_success:
            - DisableCloudAcessJob_create
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ADMS_VM
          activities:
            - delegate: uninstall
    wfDisableCloudAccess:
      steps:
        DisableCloudAcessJob_create:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DisableCloudAcessJob_submit
        DisableCloudAcessJob_submit:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DisableCloudAcessJob_submitted
        DisableCloudAcessJob_submitted:
          target: DisableCloudAcessJob
          activities:
            - set_state: submitted
          on_success:
            - DisableCloudAcessJob_run
        DisableCloudAcessJob_run:
          target: DisableCloudAcessJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DisableCloudAcessJob_executed
        DisableCloudAcessJob_executed:
          target: DisableCloudAcessJob
          activities:
            - set_state: executed
