tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: ADMSTemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: ADMS template

imports:
  - yorc-types:1.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - ddi-types:0.1.3
  - heappe-types:1.0.3
  - org.ystia.docker.containers.docker.generic:3.0.0-SNAPSHOT
  - org.ystia.docker.ansible:3.0.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT
  - org.lexis.weather.wps:0.1.1-SNAPSHOT
  - org.lexis.weather.adms:0.1.0

topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "Access token"
    preprocessing_start_date:
      type: string
      description: Download GFS files from this date, format YYYYMMDDHH
      required: true
    preprocessing_end_date:
      type: string
      description: Download GFS files up to this date, format YYYYMMDDHH
      required: true
    postprocessing_adms_type:
      type: string
      description: type of ADMS simulation executed, urban or industrial
      required: true
    preprocessing_docker_image:
      type: string
      description: Pre-processing container repository path
      default: "laurentg/wps.gfs:0.4.2"
      required: false
    preprocessing_dataset_geographical_data:
      type: string
      description: Dataset containing geographical data
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/69c0f740-33f0-11eb-8f85-0050568fcecc"
      required: false
    preprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the pre-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/gfs:/input", "/wps_data/output:/output", "/mnt/cloud_staging_area/adms/69c0f740-33f0-11eb-8f85-0050568fcecc:/geogrid"]
      required: false
    postprocessing_MET_results_title:
      type: string
      description: Title of the MET processing results dataset to create in DDI
      default: MET processing results
      required: false
    postprocessing_docker_image:
      type: string
      description: Post-processing docker image mame:tag
      default: "adms/ncl:1.0.0"
      required: false
    postprocessing_dataset_docker_image_path:
      type: string
      description: Post-processing docker image tar archive path in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/89ddda90-1918-11eb-b6d1-0050568fc9b5"
      required: false
    postprocessing_dataset_ncl_script:
      type: string
      description: Post-processing NCL script path in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/7fc89bf4-1d13-11eb-ae7e-0050568fc9b5"
      required: false
    postprocessing_ddi_path:
      type: string
      description: Path where to transfer the post-processing results in DDI
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
      required: false
    postprocessing_dataset_title_adms_result:
      type: string
      description: Which will be the title of the dataset containing ADMS results
      default: ADMS tests results
      required: false
    postprocessing_dataset_id_adms_urban_app:
      type: string
      description: ID of the dataset containing the ADMSUrban.exe and corresponding files. The DDI dataset has to contain single file called adms_urban.zip
      default: "f284db6c-2588-11eb-bbae-0050568fcecc"
      required: false
    postprocessing_dataset_id_adms_urban_static_data:
      type: string
      description: ID of the dataset containing the static data for ADMSUrban
      default: "f1275722-25b5-11eb-bbae-0050568fcecc"
      required: false
    postprocessing_dataset_id_adms_industrial_app:
      type: string
      description: ID of the dataset containing the ADMSIndustrial.exe and corresponding files. The DDI dataset has to contain single file called adms_industrial.zip
      default: "ab773490-544a-11eb-b72c-0050568fcecc"
      required: false
    postprocessing_dataset_id_adms_industrial_static_data:
      type: string
      description: ID of the dataset containing the static data for ADMSIndustrial
      default: "b6e09a96-25ac-11eb-bbae-0050568fcecc"
      required: false
  node_templates:
    PublicNet:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    ADMS_VM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    GetDDIAccess:
      type: org.ddi.nodes.DDIAccess
      requirements:
        - hostedOnComputeHost:
            type_requirement: os
            node: ADMS_VM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.ddi.relationships.SameSite
    DDIToCloudGEOGDatasetJob:
      type: org.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: preprocessing_dataset_geographical_data }
        cloud_staging_area_directory_path: "adms_preprocessing_geog"
        timestamp_cloud_staging_area_directory: true
    MountGEOGDataset:
      type: org.lexis.datatransfer.nodes.SSHMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/adms"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.ddi.capabilities.DDIAccess
            relationship: org.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: DDIToCloudGEOGDatasetJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePreProcessDirs:
      type: org.lexis.datatransfer.nodes.CreateDirectories
      properties:
        directories: ["/wps_data/gfs", "/wps_data/output"]
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GFSData:
      type: org.lexis.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_end_date}
        number_of_past_days: 0
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WPS_GFS:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: preprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_docker_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "1024 MB"
        volumes: {get_input: preprocessing_volumes}
        docker_env_vars:  {concat: ["{\"WPS_START_DATE\": \"", get_input: preprocessing_start_date, "\", \"WPS_END_DATE\": \"", get_input: preprocessing_end_date, "\", \"WPS_MODE\": \"WRF\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    WRF:
      type: org.heappe.nodes.Job
      metadata:
        task: computation
      properties:
        token: { get_input: token }
        JobSpecification:
          Name: WRFJob
          Project: "OPEN-20-47"
          ClusterId: 2
          Tasks:
            - Name: WRFTask
              ClusterNodeTypeId: 7
              CommandTemplateId: 9
              TemplateParameterValues:
                - CommandParameterIdentifier: MPICores
                  ParameterValue: "48"
              WalltimeLimit: 36000
              MinCores: 48
              MaxCores: 48
              Priority: 4
              EnvironmentVariables:
                - Name: HDF5
                  Value: "./deps"
                - Name: NETCDF
                  Value: "./deps"
                - Name: CPPFLAGS
                  Value: "-I./deps/include"
                - Name: CFLAGS
                  Value: "-I./deps/include"
                - Name: CXXFLAGS
                  Value: "-I./deps/include"
                - Name: FCFLAGS
                  Value: "-I./deps/include"
                - Name: FFLAGS
                  Value: "-I./deps/include"
                - Name: LDFLAGS
                  Value: "-L./deps/lib"
                - Name: WRFIO_NCD_LARGE_FILE_SUPPORT
                  Value: "1"
                - Name: LD_LIBRARY_PATH
                  Value: "$LD_LIBRARY_PATH:./deps/lib"
                - Name: JASPERLIB
                  Value: "./deps/lib"
                - Name: JASPERINC
                  Value: "./deps/include"
              StandardOutputFile: "stdout"
              StandardErrorFile: "stderr"
              ProgressFile: "stdprog"
              LogFile: "stdlog"
    CopyToJobTask:
      type: org.lexis.datatransfer.nodes.CopySubDirToJobTask
      properties:
        task_name: WRFTask
        parent_directory: /wps_data/output
        subdirectory_index: 0
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.SendInputsToJob
    CopyFromJobTask:
      type: org.lexis.datatransfer.nodes.CopyFromJobTask
      properties:
        task_name: WRFTask
        source_files: [ "auxhist*" ]
        destination_directory: "/mnt/cloud_staging_area/adms/adms_data/DATA-WRF/"
        as_user: root
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - job:
            type_requirement: job
            node: WRF
            capability: org.heappe.capabilities.HeappeJob
            relationship: org.heappe.relationships.GetResultsFromJob
    CreateStagingAreaWRFResultDir:
      type: org.lexis.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "adms_wrf_results"
        create_timestamp_destination_subdirectory: true
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.datatransfer.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageWRFResults:
      type: org.lexis.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/mnt/cloud_staging_area/postprocess/adms_data/DATA-WRF/"
        destination_subdirectory: "wrf"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    DDIToCloudDockerImageJob:
      type: org.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: postprocessing_dataset_docker_image_path }
        cloud_staging_area_directory_path: "adms_postprocessing_image"
        timestamp_cloud_staging_area_directory: true
    MountDockerImageDataset:
      type: org.lexis.datatransfer.nodes.SSHMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/docker_image"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.ddi.capabilities.DDIAccess
            relationship: org.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: DDIToCloudDockerImageJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    FindArchive:
      type: org.lexis.datatransfer.nodes.FindDockerImageArchiveInStagingAreaDirectory
      properties:
        shell_patterns: ["*.tar*", "*.tgz"]
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: MountDockerImageDataset
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    ImageLoader:
      type: org.ystia.docker.images.Loader
      properties:
        name: { get_input: postprocessing_docker_image }
        force_load: true
      requirements:
        - archive_provider:
            type_requirement: archive_provider
            node: FindArchive
            capability: org.ystia.docker.images.capabilities.ArchiveProvider
            relationship: org.ystia.docker.images.relationships.ArchiveProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    DDIToCloudNCLScriptJob:
      type: org.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        ddi_dataset_path: { get_input: postprocessing_dataset_ncl_script }
        cloud_staging_area_directory_path: "adms_postprocessing_ncl"
        timestamp_cloud_staging_area_directory: true
    MountNCLScriptDataset:
      type: org.lexis.datatransfer.nodes.SSHMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/ncl_script"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.ddi.capabilities.DDIAccess
            relationship: org.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: DDIToCloudNCLScriptJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    FindNCLScript:
      type: org.lexis.datatransfer.nodes.FindFileInStagingAreaDirectory
      properties:
        shell_patterns: ["*.ncl"]
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: MountNCLScriptDataset
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CopyNCLScriptFromStagingArea:
      type: org.lexis.datatransfer.nodes.CopyFromStagingArea
      properties:
        destination_directory: "/mnt/cloud_staging_area/adms/adms_data"
      requirements:
        - file_provider:
            type_requirement: file_provider
            node: FindNCLScript
            capability: org.lexis.datatransfer.capabilities.FileProvider
            relationship: org.lexis.datatransfer.relationships.FileProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WRFToMet:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_docker_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        mem_share: "128 MB"
        volumes: ["/mnt/cloud_staging_area/adms/adms_data/:/wrfdata"]
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    CreateStagingAreaResultDir:
      type: org.lexis.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "adms_results"
        create_timestamp_destination_subdirectory: true
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.datatransfer.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageMETResults:
      type: org.lexis.datatransfer.nodes.CopyFilesToStagingAreaDirectory
      properties:
        source_directory: "/mnt/cloud_staging_area/postprocess/adms_data/DATA-WRF/"
        source_files: [ "*.met" ]
        destination_subdirectory: "met"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIWRFJob:
      type: org.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"ADMS workflow\"], \"contributor\": [\"ADMS workflow\"], \"publisher\": [\"ADMS workflow\"], \"resourceType\": \"WRF result\", \"title\": \"ADMS Workflow WRF result - ", get_input: preprocessing_start_date, "\"}"]}
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
    METResultsToDDIJob:
      type: org.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"ADMS workflow\"], \"contributor\": [\"ADMS workflow\"], \"publisher\": [\"ADMS workflow\"], \"resourceType\": \"Workflow result\", \"title\": \"", get_input: postprocessing_MET_results_title, "\"}"]}
        token: { get_input: token }
        ddi_path: { get_input: postprocessing_ddi_path }
        source_subdirectory: "met"
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.ddi.relationships.CloudAreaDirectoryProvider
    DeleteCloudDataImageJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: DDIToCloudDockerImageJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
    DeleteCloudDataNCLScriptJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: DDIToCloudNCLScriptJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
    DeleteCloudDataGEOGJob:
      type: org.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: DDIToCloudGEOGDatasetJob
            capability: org.ddi.capabilities.DataTransferCloud
            relationship: org.ddi.relationships.CloudAreaDatasetProvider
    ADMS_WIN_VM:
      type: tosca.nodes.Compute
      requirements:
        - networkNetworkConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
        os:
          properties:
            type: "windows"
    ADMS:
      type: org.lexis.nodes.ADMS
      properties:
        adms_type: { get_input: postprocessing_adms_type }
        token: { get_input: token }
        dataset_title_adms_result: { get_input: postprocessing_dataset_title_adms_result }
        dataset_title_ncl_result: { get_input: postprocessing_MET_results_title }
        dataset_id_adms_urban_app: { get_input: postprocessing_dataset_id_adms_urban_app }
        dataset_id_adms_urban_static_data: { get_input: postprocessing_dataset_id_adms_urban_static_data }
        dataset_id_adms_industrial_app: { get_input: postprocessing_dataset_id_adms_industrial_app }
        dataset_id_adms_industrial_static_data: { get_input: postprocessing_dataset_id_adms_industrial_static_data }
      requirements:
        - hostedOnAdmsVmHost:
            type_requirement: host
            node: ADMS_WIN_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
  outputs:
    computation_dataset_wrf_results_path:
      description: DDI path to ADMS WRF results
      value: { get_attribute: [ CloudToDDIWRFJob, destination_path ] }
    postprocessing_dataset_met_result_path:
      description: DDI path to ADMS MET results
      value: { get_attribute: [ METResultsToDDIJob, destination_path ] }
    postprocessing_dataset_adms_result_id:
      description: ID of the dataset where ADMS post-process results are stored
      value: { get_attribute: [ ADMS, dataset_id_result ] }
  workflows:
    install:
      steps:
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
    uninstall:
      steps:
        Compute_uninstall:
          target: ADMS_VM
          activities:
            - delegate: uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
        WinwdowsCompute_uninstall:
          target: ADMS_WIN_VM
          activities:
            - delegate: uninstall
    Run:
      steps:
        Compute_install:
          target: ADMS_VM
          activities:
            - delegate: install
          on_success:
            - GetDDIAccess_start
            - CreatePreProcessDirs_start
        GetDDIAccess_start:
          target: GetDDIAccess
          activities:
            - call_operation: Standard.start
          on_success:
            - GetDDIAccess_started
        GetDDIAccess_started:
          target: GetDDIAccess
          activities:
            - set_state: started
          on_success:
            - DDIToCloudGEOGDatasetJob_create
        DDIToCloudGEOGDatasetJob_create:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudGEOGDatasetJob_submit
        DDIToCloudGEOGDatasetJob_submit:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudGEOGDatasetJob_submitted
        DDIToCloudGEOGDatasetJob_submitted:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudGEOGDatasetJob_run
        DDIToCloudGEOGDatasetJob_run:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudGEOGDatasetJob_executed
        DDIToCloudGEOGDatasetJob_executed:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_create
        MountGEOGDataset_create:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountGEOGDataset_created
        MountGEOGDataset_created:
          target: MountGEOGDataset
          activities:
            - set_state: created
          on_success:
            - MountGEOGDataset_start
        MountGEOGDataset_start:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountGEOGDataset_started
        MountGEOGDataset_started:
          target: MountGEOGDataset
          activities:
            - set_state: started
          on_success:
            - Docker_create
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_start
        GFSData_start:
          target: GFSData
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_started
        GFSData_started:
          target: GFSData
          activities:
            - set_state: started
          on_success:
            - Docker_create
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WRF_create
            - WPS_GFS_delete
        WPS_GFS_delete:
          target: WPS_GFS
          activities:
            - call_operation: Standard.delete
          on_success:
            - WPS_GFS_deleted
        WPS_GFS_deleted:
          target: WPS_GFS
          activities:
            - set_state: deleted
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreateStagingAreaWRFResultDir_start
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CopyFromJobTask_start:
          target: CopyFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJobTask_started
        CopyFromJobTask_started:
          target: CopyFromJobTask
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DDIToCloudDockerImageJob_create
        DDIToCloudDockerImageJob_create:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudDockerImageJob_submit
        DDIToCloudDockerImageJob_submit:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudDockerImageJob_submitted
        DDIToCloudDockerImageJob_submitted:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudDockerImageJob_run
        DDIToCloudDockerImageJob_run:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudDockerImageJob_executed
        DDIToCloudDockerImageJob_executed:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: executed
          on_success:
            - MountDockerImageDataset_create
        MountDockerImageDataset_create:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountDockerImageDataset_created
        MountDockerImageDataset_created:
          target: MountDockerImageDataset
          activities:
            - set_state: created
          on_success:
            - MountDockerImageDataset_start
        MountDockerImageDataset_start:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountDockerImageDataset_started
        MountDockerImageDataset_started:
          target: MountDockerImageDataset
          activities:
            - set_state: started
          on_success:
            - FindArchive_start
        FindArchive_start:
          target: FindArchive
          activities:
            - call_operation: Standard.start
          on_success:
            - FindArchive_started
        FindArchive_started:
          target: FindArchive
          activities:
            - set_state: started
          on_success:
            - ImageLoader_create
        ImageLoader_create:
          target: ImageLoader
          activities:
            - call_operation: Standard.create
          on_success:
            - ImageLoader_created
        ImageLoader_created:
          target: ImageLoader
          activities:
            - set_state: created
          on_success:
            - ImageLoader_start
        ImageLoader_start:
          target: ImageLoader
          activities:
            - call_operation: Standard.start
          on_success:
            - ImageLoader_started
        ImageLoader_started:
          target: ImageLoader
          activities:
            - set_state: started
          on_success:
            - DDIToCloudNCLScriptJob_create
        DDIToCloudNCLScriptJob_create:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudNCLScriptJob_submit
        DDIToCloudNCLScriptJob_submit:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudNCLScriptJob_submitted
        DDIToCloudNCLScriptJob_submitted:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudNCLScriptJob_run
        DDIToCloudNCLScriptJob_run:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudNCLScriptJob_executed
        DDIToCloudNCLScriptJob_executed:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: executed
          on_success:
            - MountNCLScriptDataset_create
        MountNCLScriptDataset_create:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountNCLScriptDataset_created
        MountNCLScriptDataset_created:
          target: MountNCLScriptDataset
          activities:
            - set_state: created
          on_success:
            - MountNCLScriptDataset_start
        MountNCLScriptDataset_start:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountNCLScriptDataset_started
        MountNCLScriptDataset_started:
          target: MountNCLScriptDataset
          activities:
            - set_state: started
          on_success:
            - FindNCLScript_start
        FindNCLScript_start:
          target: FindNCLScript
          activities:
            - call_operation: Standard.start
          on_success:
            - FindNCLScript_started
        FindNCLScript_started:
          target: FindNCLScript
          activities:
            - set_state: started
          on_success:
            - CopyNCLScriptFromStagingArea_start
        CopyNCLScriptFromStagingArea_start:
          target: CopyNCLScriptFromStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - WRFToMet_create
        WRFToMet_create:
          target: WRFToMet
          activities:
            - call_operation: Standard.create
          on_success:
            - WRFToMet_start
        WRFToMet_start:
          target: WRFToMet
          activities:
            - call_operation: Standard.start
          on_success:
            - WRFToMet_started
        WRFToMet_started:
          target: WRFToMet
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageMETResults_start
        StageMETResults_start:
          target: StageMETResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageMETResults_started
        StageMETResults_started:
          target: StageMETResults
          activities:
            - set_state: started
          on_success:
            - METResultsToDDIJob_create
        METResultsToDDIJob_create:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - METResultsToDDIJob_submit
        METResultsToDDIJob_submit:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - METResultsToDDIJob_submitted
        METResultsToDDIJob_submitted:
          target: METResultsToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - METResultsToDDIJob_run
        METResultsToDDIJob_run:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - METResultsToDDIJob_executed
        METResultsToDDIJob_executed:
          target: METResultsToDDIJob
          activities:
            - set_state: executed
          on_success:
            - WinwdowsCompute_install
        WinwdowsCompute_install:
          target: ADMS_WIN_VM
          activities:
            - delegate: install
          on_success:
            - ADMS_start
        ADMS_start:
          target: ADMS
          activities:
            - call_operation: Standard.start
          on_success:
            - ADMS_started
        ADMS_started:
          target: ADMS
          activities:
            - set_state: started
          on_success:
            - WinwdowsCompute_uninstall
            - MountGEOGDataset_stop
            - MountDockerImageDataset_stop
            - MountNCLScriptDataset_stop
        WinwdowsCompute_uninstall:
          target: ADMS_WIN_VM
          activities:
            - delegate: uninstall
          on_success:
            - Compute_uninstall
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataGEOGJob_create
        MountDockerImageDataset_stop:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountDockerImageDataset_stopped
        MountDockerImageDataset_stopped:
          target: MountDockerImageDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataImageJob_create
        MountNCLScriptDataset_stop:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountNCLScriptDataset_stopped
        MountNCLScriptDataset_stopped:
          target: MountNCLScriptDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataNCLScriptJob_create
        DeleteCloudDataImageJob_create:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataImageJob_created
        DeleteCloudDataImageJob_created:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataImageJob_submit
        DeleteCloudDataImageJob_submit:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataImageJob_submitted
        DeleteCloudDataImageJob_submitted:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataImageJob_run
        DeleteCloudDataImageJob_run:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataImageJob_executed
        DeleteCloudDataImageJob_executed:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        DeleteCloudDataNCLScriptJob_create:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataNCLScriptJob_created
        DeleteCloudDataNCLScriptJob_created:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataNCLScriptJob_submit
        DeleteCloudDataNCLScriptJob_submit:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataNCLScriptJob_submitted
        DeleteCloudDataNCLScriptJob_submitted:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataNCLScriptJob_run
        DeleteCloudDataNCLScriptJob_run:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataNCLScriptJob_executed
        DeleteCloudDataNCLScriptJob_executed:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        DeleteCloudDataGEOGJob_create:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataGEOGJob_created
        DeleteCloudDataGEOGJob_created:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataGEOGJob_submit
        DeleteCloudDataGEOGJob_submit:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataGEOGJob_submitted
        DeleteCloudDataGEOGJob_submitted:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataGEOGJob_run
        DeleteCloudDataGEOGJob_run:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataGEOGJob_executed
        DeleteCloudDataGEOGJob_executed:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ADMS_VM
          activities:
            - delegate: uninstall
    testWRF:
      steps:
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CopyToJobTask_start
        CopyToJobTask_start:
          target: CopyToJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyToJobTask_started
        CopyToJobTask_started:
          target: CopyToJobTask
          activities:
            - set_state: started
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
    testPostProcess:
      steps:
        CreateStagingAreaWRFResultDir_start:
          target: CreateStagingAreaWRFResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFResultDir_started
        CreateStagingAreaWRFResultDir_started:
          target: CreateStagingAreaWRFResultDir
          activities:
            - set_state: started
          on_success:
            - CopyFromJobTask_start
        CopyFromJobTask_start:
          target: CopyFromJobTask
          activities:
            - call_operation: Standard.start
          on_success:
            - CopyFromJobTask_started
        CopyFromJobTask_started:
          target: CopyFromJobTask
          activities:
            - set_state: started
          on_success:
            - StageWRFResults_start
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
        StageWRFResults_start:
          target: StageWRFResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFResults_started
        StageWRFResults_started:
          target: StageWRFResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIWRFJob_create
        CloudToDDIWRFJob_create:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIWRFJob_submit
        CloudToDDIWRFJob_submit:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIWRFJob_submitted
        CloudToDDIWRFJob_submitted:
          target: CloudToDDIWRFJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIWRFJob_run
        CloudToDDIWRFJob_run:
          target: CloudToDDIWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIWRFJob_executed
        CloudToDDIWRFJob_executed:
          target: CloudToDDIWRFJob
          activities:
            - set_state: executed
          on_success:
            - DDIToCloudDockerImageJob_create
        DDIToCloudDockerImageJob_create:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudDockerImageJob_submit
        DDIToCloudDockerImageJob_submit:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudDockerImageJob_submitted
        DDIToCloudDockerImageJob_submitted:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudDockerImageJob_run
        DDIToCloudDockerImageJob_run:
          target: DDIToCloudDockerImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudDockerImageJob_executed
        DDIToCloudDockerImageJob_executed:
          target: DDIToCloudDockerImageJob
          activities:
            - set_state: executed
          on_success:
            - MountDockerImageDataset_create
        MountDockerImageDataset_create:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountDockerImageDataset_created
        MountDockerImageDataset_created:
          target: MountDockerImageDataset
          activities:
            - set_state: created
          on_success:
            - MountDockerImageDataset_start
        MountDockerImageDataset_start:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountDockerImageDataset_started
        MountDockerImageDataset_started:
          target: MountDockerImageDataset
          activities:
            - set_state: started
          on_success:
            - FindArchive_start
        FindArchive_start:
          target: FindArchive
          activities:
            - call_operation: Standard.start
          on_success:
            - FindArchive_started
        FindArchive_started:
          target: FindArchive
          activities:
            - set_state: started
          on_success:
            - ImageLoader_create
        ImageLoader_create:
          target: ImageLoader
          activities:
            - call_operation: Standard.create
          on_success:
            - ImageLoader_created
        ImageLoader_created:
          target: ImageLoader
          activities:
            - set_state: created
          on_success:
            - ImageLoader_start
        ImageLoader_start:
          target: ImageLoader
          activities:
            - call_operation: Standard.start
          on_success:
            - ImageLoader_started
        ImageLoader_started:
          target: ImageLoader
          activities:
            - set_state: started
          on_success:
            - DDIToCloudNCLScriptJob_create
        DDIToCloudNCLScriptJob_create:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudNCLScriptJob_submit
        DDIToCloudNCLScriptJob_submit:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudNCLScriptJob_submitted
        DDIToCloudNCLScriptJob_submitted:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudNCLScriptJob_run
        DDIToCloudNCLScriptJob_run:
          target: DDIToCloudNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudNCLScriptJob_executed
        DDIToCloudNCLScriptJob_executed:
          target: DDIToCloudNCLScriptJob
          activities:
            - set_state: executed
          on_success:
            - MountNCLScriptDataset_create
        MountNCLScriptDataset_create:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountNCLScriptDataset_created
        MountNCLScriptDataset_created:
          target: MountNCLScriptDataset
          activities:
            - set_state: created
          on_success:
            - MountNCLScriptDataset_start
        MountNCLScriptDataset_start:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountNCLScriptDataset_started
        MountNCLScriptDataset_started:
          target: MountNCLScriptDataset
          activities:
            - set_state: started
          on_success:
            - FindNCLScript_start
        FindNCLScript_start:
          target: FindNCLScript
          activities:
            - call_operation: Standard.start
          on_success:
            - FindNCLScript_started
        FindNCLScript_started:
          target: FindNCLScript
          activities:
            - set_state: started
          on_success:
            - CopyNCLScriptFromStagingArea_start
        CopyNCLScriptFromStagingArea_start:
          target: CopyNCLScriptFromStagingArea
          activities:
            - call_operation: Standard.start
          on_success:
            - WRFToMet_create
        WRFToMet_create:
          target: WRFToMet
          activities:
            - call_operation: Standard.create
          on_success:
            - WRFToMet_start
        WRFToMet_start:
          target: WRFToMet
          activities:
            - call_operation: Standard.start
          on_success:
            - WRFToMet_started
        WRFToMet_started:
          target: WRFToMet
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageMETResults_start
        StageMETResults_start:
          target: StageMETResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageMETResults_started
        StageMETResults_started:
          target: StageMETResults
          activities:
            - set_state: started
          on_success:
            - METResultsToDDIJob_create
        METResultsToDDIJob_create:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - METResultsToDDIJob_submit
        METResultsToDDIJob_submit:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - METResultsToDDIJob_submitted
        METResultsToDDIJob_submitted:
          target: METResultsToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - METResultsToDDIJob_run
        METResultsToDDIJob_run:
          target: METResultsToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - METResultsToDDIJob_executed
        METResultsToDDIJob_executed:
          target: METResultsToDDIJob
          activities:
            - set_state: executed
          on_success:
            - WinwdowsCompute_install
        WinwdowsCompute_install:
          target: ADMS_WIN_VM
          activities:
            - delegate: install
          on_success:
            - ADMS_start
        ADMS_start:
          target: ADMS
          activities:
            - call_operation: Standard.start
          on_success:
            - ADMS_started
        ADMS_started:
          target: ADMS
          activities:
            - set_state: started
          on_success:
            - WinwdowsCompute_uninstall
            - MountGEOGDataset_stop
            - MountDockerImageDataset_stop
            - MountNCLScriptDataset_stop
        WinwdowsCompute_uninstall:
          target: ADMS_WIN_VM
          activities:
            - delegate: uninstall
          on_success:
            - Compute_uninstall
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataGEOGJob_create
        MountDockerImageDataset_stop:
          target: MountDockerImageDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountDockerImageDataset_stopped
        MountDockerImageDataset_stopped:
          target: MountDockerImageDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataImageJob_create
        MountNCLScriptDataset_stop:
          target: MountNCLScriptDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountNCLScriptDataset_stopped
        MountNCLScriptDataset_stopped:
          target: MountNCLScriptDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudDataNCLScriptJob_create
        DeleteCloudDataImageJob_create:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataImageJob_created
        DeleteCloudDataImageJob_created:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataImageJob_submit
        DeleteCloudDataImageJob_submit:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataImageJob_submitted
        DeleteCloudDataImageJob_submitted:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataImageJob_run
        DeleteCloudDataImageJob_run:
          target: DeleteCloudDataImageJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataImageJob_executed
        DeleteCloudDataImageJob_executed:
          target: DeleteCloudDataImageJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        DeleteCloudDataNCLScriptJob_create:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataNCLScriptJob_created
        DeleteCloudDataNCLScriptJob_created:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataNCLScriptJob_submit
        DeleteCloudDataNCLScriptJob_submit:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataNCLScriptJob_submitted
        DeleteCloudDataNCLScriptJob_submitted:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataNCLScriptJob_run
        DeleteCloudDataNCLScriptJob_run:
          target: DeleteCloudDataNCLScriptJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataNCLScriptJob_executed
        DeleteCloudDataNCLScriptJob_executed:
          target: DeleteCloudDataNCLScriptJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        DeleteCloudDataGEOGJob_create:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudDataGEOGJob_created
        DeleteCloudDataGEOGJob_created:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudDataGEOGJob_submit
        DeleteCloudDataGEOGJob_submit:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudDataGEOGJob_submitted
        DeleteCloudDataGEOGJob_submitted:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudDataGEOGJob_run
        DeleteCloudDataGEOGJob_run:
          target: DeleteCloudDataGEOGJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudDataGEOGJob_executed
        DeleteCloudDataGEOGJob_executed:
          target: DeleteCloudDataGEOGJob
          activities:
            - set_state: executed
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: ADMS_VM
          activities:
            - delegate: uninstall
    start:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: started
    stop:
      steps:
        stop_step:
          target: PublicNet
          activities:
            - set_state: stopped
    cancel:
      steps:
        start_step:
          target: PublicNet
          activities:
            - set_state: canceled
