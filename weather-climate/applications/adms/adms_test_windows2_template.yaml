tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.wp7.ADMSTmpTest
  template_version: 0.1.0-SNAPSHOT
  template_author: lexisadmin

description: "Basic ADMS Test"

imports:
  - yorc-types:1.1.0
  - yorc-openstack-types:3.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - alien-base-types:3.0.0
  - org.lexis.common.ddi-types:0.1.2
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT
topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "OpenID Connect token"
    postprocessing_adms_script_content:
      type: string
      required: false
      description: "Content of the ADMS script to run"
      default: "echo Hello"
    postprocessing_dataset_ncl_result:
      type: string
      description: DDI path to the dataset containing NCL results
      default: /LRZLexisZone/project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/5aeb3576-1e99-11eb-ae7e-0050568fc9b5
      required: false
  node_templates:
    PublicNet:
      type: tosca.nodes.Network
      properties:
        ip_version: 4
    ADMS_VM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    EnableCloudAcessJob:
      type: org.lexis.common.ddi.nodes.EnableCloudStagingAreaAccessJob
      properties:
        token: { get_input: token }
      requirements:
        - sameSiteComputeOs:
            type_requirement: os
            node: ADMS_VM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    MountStagingArea:
      type: org.lexis.common.datatransfer.nodes.MountStagingArea
      properties:
        destination_directory: "/mnt/cloud_staging_area"
        user_name: lexisclouduser
        group_name: lexiscloudgroup
      requirements:
        - mountCloudStagingAreaEnableCloudAcessJobCloud_staging_area_access:
            type_requirement: cloud_staging_area_access
            node: EnableCloudAcessJob
            capability: org.lexis.common.ddi.capabilities.CloudStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreateStagingAreaResultDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "continuum_results"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountStagingArea
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: ADMS_VM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIJob:
      type: org.lexis.common.ddi.nodes.CloudToDDIJob
      properties:
        token: { get_input: token }
        ddi_path: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    ADMS_WINVM:
      type: yorc.nodes.openstack.Compute
      properties:
        boot_volume:
          source: image
        metadata: {concat: ["{\"token\": \"", get_input: token, "\", \"dataset\": \"", get_input: postprocessing_dataset_ncl_result, "\", \"script_content\": \"", get_input: postprocessing_adms_script_content, "\"}"]}
      requirements:
        - networkNetworkConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
        - dependsOnCloudToDdiJobFeature:
            type_requirement: dependency
            node: CloudToDDIJob
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      capabilities:
        endpoint:
          properties:
            credentials: 
              user: Admin
              keys: 
                0: "/var/yorc/.ssh/yorc.pem"
              token_type: password
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
        os:
          properties:
            type: "windows_adms"